{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","name","projects","setProjects","useEffect","callback","xhr","XMLHttpRequest","responseType","open","onload","response","status","console","log","send","loadProjects","images","setImages","loadImages","className","map","project","index","main_tag","class","image","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAAe,I,MCyGAA,MA/Df,WAAgB,IAAD,EACmBC,mBAAS,CAAC,CAACC,KAAM,OADpC,mBACNC,EADM,KACIC,EADJ,KAEbC,qBAAU,YAvCZ,SAAsBC,GACpB,IAAMC,EAAM,IAAIC,eAKhBD,EAAIE,aADiB,OAEvBF,EAAIG,KALa,MAEH,mCAIdH,EAAII,OAAS,WACXL,EAASC,EAAIK,SAAUL,EAAIM,SAK7BC,QAAQC,IAAI,aAAcR,GAC1BA,EAAIS,OA8BAC,EALmB,SAACL,EAAUC,GAE5BT,EAAYQ,QAIb,IATU,MAWeX,mBAAS,CAAC,KAXzB,mBAWNiB,EAXM,KAWEC,EAXF,KAyBb,OAbAd,qBAAU,YA/BZ,SAAoBC,GAClB,IAAMC,EAAM,IAAIC,eAKhBD,EAAIE,aADiB,OAEvBF,EAAIG,KALa,MAEH,gCAIdH,EAAII,OAAS,WACXL,EAASC,EAAIK,SAAUL,EAAIM,SAK7BC,QAAQC,IAAI,MAAOR,GACnBA,EAAIS,OAsBAI,EALmB,SAACR,EAAUC,GAE5BM,EAAUP,QAIX,IAIHE,QAAQC,IAAI,IAAKZ,GACjBW,QAAQC,IAAIG,GAEV,qBAAKG,UAAU,MAAf,SAGI,mBAAGA,UAAU,WAAb,SACGlB,EAASmB,KAAI,SAACC,EAASC,GAExB,OADEV,QAAQC,IAAIQ,GAEZ,qBAAIF,UAAU,eAAd,UACE,qBAAKA,UAAU,MAAf,SAAsBE,EAAQrB,OAC9B,qBAAKmB,UAAU,OAAf,SAAuBE,EAAQE,WAC/B,qBAAKC,MAAM,SAAX,SACCR,EAAOI,KAAI,SAACK,EAAOH,GAGpB,OAFEV,QAAQC,IAAIY,GAIV,qBAAKC,IAAG,+BAA0BD,EAAMA,yBCxE3CE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3bb4e84a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useEffect, useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n// import Image from 'https://photos.google.com/album/AF1QipM3pARMEXV75Ez--x_giuJefiTqITRN4d8Ga1NX/photo/AF1QipPCBeUuE1neE9Hdg5U3a_MgYlJoeWNrALr9AQms'\n\nfunction loadProjects(callback){\n  const xhr = new XMLHttpRequest()\n  const method = 'GET' // 'POST'\n  // const url = \"https://gasinc.herokuapp.com/projects/\"\n  const url = \"http://127.0.0.1:8000/projects/\"\n  const responseType = \"json\"\n  xhr.responseType = responseType\nxhr.open(method, url)\nxhr.onload = function() {\n  callback(xhr.response, xhr.status)\n}\n// xhr.onerror = function (e) {\n//   callback({\"message\": \"invalid request\"}, 400)\n// }\nconsole.log('projects x', xhr)\nxhr.send()\n}\n\nfunction loadImages(callback){\n  const xhr = new XMLHttpRequest()\n  const method = 'GET' // 'POST'\n  // const url = \"https://gasinc.herokuapp.com/images/\"\n  const url = \"http://127.0.0.1:8000/images\"\n  const responseType = \"json\"\n  xhr.responseType = responseType\nxhr.open(method, url)\nxhr.onload = function() {\n  callback(xhr.response, xhr.status)\n}\n// xhr.onerror = function (e) {\n//   callback({\"message\": \"invalid request\"}, 400)\n// }\nconsole.log('xhr', xhr)\nxhr.send()\n}\n\n\nfunction App() {\n  const [projects, setProjects] = useState([{name: 123}])\n  useEffect(() => {\n    const myCallback = (response, status) => {\n\n      setProjects(response);\n\n    }\n    loadProjects(myCallback)\n  }, [])\n\n  const [images, setImages] = useState([{}])\n  useEffect(() => {\n    const myCallback = (response, status) => {\n\n      setImages(response);\n\n    }\n    loadImages(myCallback)\n  }, [])\n\n\n  \n  console.log('p', projects)\n  console.log(images)\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\"> */}\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n        <p className='projects'>\n          {projects.map((project, index)=>{\n            console.log(project)\n          return( \n            <li className='project-item'>\n              <div className='p-n'>{project.name}</div>\n              <div className='p-mt'>{project.main_tag}</div>\n              <div class='p-imgs'>\n              {images.map((image, index)=>{\n                console.log(image)\n                // if(){\n              return( \n                \n                  <img src={`http://127.0.0.1:8000${image.image}`}/>\n                \n          \n                )\n              }\n            // }\n              )} \n              \n              </div>\n              \n            </li>\n    \n            )\n          })\n          }\n        </p>\n      {/* </header> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}